//------------------------------------------------
//--- 010 Editor v8.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

// it's md3 format mostly https://icculus.org/~phaethon/q3a/formats/md3format.html

const float XYZ_SCALE_FACTOR = 1.0/960;

typedef struct {
  FLOAT x;
  FLOAT y;
  FLOAT z;
} VECTOR_3F;

typedef struct {
  FLOAT x;
  FLOAT y;
  FLOAT z;
  FLOAT z;
} VECTOR_4F;

typedef struct {
  FLOAT x;
  FLOAT y;
} VECTOR_2F;

typedef struct {
  UINT x;
  UINT y;
  UINT z;
} VECTOR_3UI;

typedef struct {
  INT16 x;
  INT16 y;
  INT16 z;
} VECTOR_3I16;

typedef struct {
  UINT16 x;
  UINT16 y;
  UINT16 z;
  UINT16 w;
} VECTOR_4U16;

char Magic[4];
UINT Version;
char Name[64];

UINT flags;
UINT FrameCount;
UINT TagsNum;
UINT SurfacesNum;

UINT SkinNum;
UINT OffsetFrames;
UINT OffsetTags;
UINT OffsetSurfaces;
UINT OffsetEof;

struct {
  VECTOR_3F MinBounds;
  VECTOR_3F MaxBounds;
  VECTOR_3F LocalOrigin;
  float SphereRadius;
  char FrameName[16];
} FRAME_DATA[FrameCount];

char Ident[4];
char SurfaceName[64];
UINT Flags;
UINT FrameCount; 
UINT ShaderCount;
UINT VertexCount;
UINT FaceCount;
UINT Offset;
UINT Offset;
UINT Offset;
UINT OffsetXYZNormal;
UINT Offset;

char ShaderName[64];
UINT ShaderIndex;

VECTOR_3UI Indexes[FaceCount];
VECTOR_2F TextureCoordinates[VertexCount];

struct {
  struct {
    VECTOR_3I16 Coordinates <comment=coordinatesComment>; 
    UINT16 Normal;
  } FRAME_VERTEXES[VertexCount];
} VERTEXES[FrameCount];

string coordinatesComment(VECTOR_3I16 &coordinates) {
  local string s;
  SPrintf(s, "(%f, %f, %f)", coordinates.x * XYZ_SCALE_FACTOR, 
    coordinates.y * XYZ_SCALE_FACTOR, coordinates.z* XYZ_SCALE_FACTOR);
  return s;
}